# Задача №2. Решение в группах

# Дан массив, состоящий из целых чисел. Напишите программу, которая в данном массиве  
# определит количество элементов, у которых два соседних и, при этом, оба соседних 
# элемента меньше данного. Сначала вводится число N — количество элементов в массиве. 
# Далее записаны N чисел — элементы массива. Массив состоит из целых чисел.

# Ввод:                  Ввод:
# 5                      5
# 1 2 3 4 5              1 5 1 5 1
# Вывод:                 Вывод:
# 0                      2


# 1. Решение через традиционный итератор с функцией append:

def count_elements_traditional(arr):
    count = 0
    for i in range(1, len(arr) - 1):
        if arr[i-1] < arr[i] > arr[i+1]:
            count += 1
    return count

# Ввод данных
N = int(input("Введите количество элементов в массиве: "))
arr = list(map(int, input("Введите элементы массива через пробел: ").split()))

# Проверка корректности ввода
if len(arr) != N:
    print("Количество введенных элементов не совпадает с указанным количеством N")
else:
    # Вывод результата
    print("Количество элементов, у которых оба соседних элемента меньше текущего:")
    print(count_elements_traditional(arr))

"""
Пояснение:
1. Создаем счетчик count.
2. Проходим по массиву начиная со второго элемента и заканчивая предпоследним.
3. Если оба соседних элемента меньше текущего, увеличиваем счетчик.
4. Возвращаем значение счетчика.
"""


# 2. Решение с применением List Comprehension:

def count_elements_comprehension(arr):
    return sum(1 for i in range(1, len(arr) - 1) if arr[i-1] < arr[i] > arr[i+1])

# Ввод данных
N = int(input("Введите количество элементов в массиве: "))
arr = list(map(int, input("Введите элементы массива через пробел: ").split()))

# Проверка корректности ввода
if len(arr) != N:
    print("Количество введенных элементов не совпадает с указанным количеством N")
else:
    # Вывод результата
    print("Количество элементов, у которых оба соседних элемента меньше текущего:")
    print(count_elements_comprehension(arr))

"""
Пояснение:
1. Используем генератор выражений для подсчета элементов, которые удовлетворяют условию.
2. Суммируем количество таких элементов.
"""


# 3. Решение с помощью рекурсии:

def count_elements_recursive(arr, i=1, count=0):
    # Базовый случай: если достигнут предпоследний элемент
    if i >= len(arr) - 1:
        return count
    # Проверяем, что оба соседних элемента меньше текущего
    if arr[i-1] < arr[i] > arr[i+1]:
        count += 1
    # Рекурсивный вызов с увеличением индекса
    return count_elements_recursive(arr, i + 1, count)

# Ввод данных
N = int(input("Введите количество элементов в массиве: "))
arr = list(map(int, input("Введите элементы массива через пробел: ").split()))

# Проверка корректности ввода
if len(arr) != N:
    print("Количество введенных элементов не совпадает с указанным количеством N")
else:
    # Вывод результата
    print("Количество элементов, у которых оба соседних элемента меньше текущего:")
    print(count_elements_recursive(arr))

"""
1. Базовый случай: если достигнут предпоследний элемент массива, возвращаем счетчик.
2. Проверяем условие для текущего элемента.
3. Вызываем функцию рекурсивно для следующего элемента с увеличенным счетчиком, 
если условие выполнено.
"""
